(*Diffie-Hellman Key Exchange*)
p = 323170060713110073001535134778251633624880571334890751458843413926\
9806834136210002792056362640164685458556357935330816928829023080573472\
6252735547424612457410262025279165729728627063003252634282131457669314\
1422365422094111134862999165747826803423055308634905063555771221918789\
0332729569696129743856241741236237225197346402691855797767976823014625\
3979330580152268587307611975324364674758554607150438968449403661304976\
9781285429595865959756705128385213278446852292550456827287911372009893\
1873959143374175837826000278034973198552060607533234122603254684088120\
031105907484281003994966956119696956248629032338072839127039;
g = 2;

Print["Prime number p = ", p]
Print["Generator = ", g]

a = RandomInteger[{2, 20000}];
b = RandomInteger[{2, 20000}];
Print["Private key a = ", a]
Print["Private key b = ", b]

A = PowerMod[g, a, p];
B = PowerMod[g, b, p];
Print["Public key A = ", A]
Print["Public key B = ", B]

sA = PowerMod[B, a, p];
sB = PowerMod[A, b, p];
Print["Shared secret of Alice = ", sA]
Print["Shared secret of Bob = ", sB]

If[sA == sB, sharedSecretMatch = sA];
hashedKey = Hash[sharedSecretMatch, "SHA256"];
Print["New Key: ", hashedKey]
Print["Bit length of shared secret key: ", BitLength[hashedKey]]

aesKey = IntegerString[hashedKey, 16];
Print["New key hex:" , aesKey]
